@model OSRSClientSide.Models.LoginDTO
@using usertypeenum = OSRSClientSide.Models.EnumsAndConstants.Usertype;
@{
    string amSignUp = "Index";
    string cnSignUp = "SignUp";
    string ddSelectUsertype = "Select Usertype";
    string btnLogintValue = "Login";
    string btnSignUpValue = "Signup";
    ViewBag.Title = "Login";
}

<h2>Login</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" , placeholder = "Enter Username" } })
                @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.PasswordFor(model => model.password, new { @class = "form-control", placeholder = "Enter Password" })
                @*@Html.PasswordFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.usertype, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @*@Html.DropDownList("usertype", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownListFor(model => model.usertype, new SelectList(Enum.GetValues(typeof(usertypeenum))), @ddSelectUsertype)
                @Html.ValidationMessageFor(model => model.usertype, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@btnLogintValue class="btn btn-default" />
            </div>
        </div>


        <div class="form-group">


        </div>
        <div class="d-flex">
            @Html.Label("Don't have an account?  ")


            <input type="button"
                   value=@btnSignUpValue
                   onclick="location.href= '@Url.Action(@amSignUp, @cnSignUp )' " class="btn btn-default" tabindex="-1" />



        </div>


    </div>
}

