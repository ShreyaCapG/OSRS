@model OSRSClientSide.Models.PaymentDTO
@using banks = OSRSClientSide.Models.EnumsAndConstants.Banks

@{
    ViewBag.Title = "Index";
    string ddSelectBank = "Select Bank";
    string amCustomer = "Index";
    string cnCustomer = "Customer";
}

<h2>Payment</h2>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script type="text/javascript">
    jQuery(document).ready(function ($) {

        $('input[name="choose"]').on('click', function () {
            if ($(this).val() === 'Yes') {
                $('#nameOnCard,#cardNumber,#cvv,#expiryDate').prop("disabled", false);
                $('#netBankingName').prop("disabled", "disabled");
            } else {
                $('#nameOnCard,#cardNumber,#cvv,#expiryDate').prop("disabled", "disabled");
                $('#netBankingName').prop("disabled", false);

            }
        });
    });

    jQuery(document).ready(function ($) {
        $('#netBankingName,#amount').prop("disabled", "disabled");
    });
</script>
@if (ViewBag.PaymentStatus != null)
{
    <script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.PaymentStatus");

                window.location.href = "@Url.Action(@amCustomer, @cnCustomer)";

            };
    </script>

}
@if (ViewBag.SelectPaymentMethod != null)
{
    <script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.SelectPaymentMethod");

               // window.location.href = "@Url.Action(@amCustomer, @cnCustomer)";

            };
    </script>

}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
                @*@Html.TextBoxFor(model => model.amount)*@

            </div>
        </div>
        <input type="radio" name="choose" id="yes" value="Yes" checked="checked" />Credit Card
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.nameOnCard, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nameOnCard, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nameOnCard, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cardNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cardNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cardNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cvv, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cvv, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cvv, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.expiryDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.expiryDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.expiryDate, "", new { @class = "text-danger" })
            </div>
        </div>


        <input type="radio" name="choose" id="no" value="No" />Netbanking
        <div class="form-group">
            @Html.LabelFor(model => model.netBankingName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.netBankingName, new SelectList(Enum.GetValues(typeof(banks))), @ddSelectBank)
                @*@Html.EditorFor(model => model.netBankingName, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.netBankingName, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Pay Now" class="btn btn-default" />
            </div>
        </div>
    </div>



}


